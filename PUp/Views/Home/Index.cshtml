@model  PUp.ViewModels.Project.TableProjectModelView
@{
    ViewBag.Title = "Home Page";
}


<div class="row">
    <div class="col-md-12">
        <div class="row">
            <div class="topControl pull-right">
                Show deleted | <input type="checkbox" id="deletedProjectVisibility" />
            </div>
        </div>
        <br />
        <h6 class="projects-grand-title">
            <span class="my-projects-line-text">
                <i class="fa fa-folder-open-o"> </i> Projects I'm involved in 
            </span>
        </h6>
        <div class="row">
            @foreach (var project in Model.Projects)
            {
                <div data-toggle="tooltip" data-placement="right" title="@(project.Deleted==true? "This project was deleted" : " " )"
                     class="col-md-5 col-lg-offset-1 card @(@Model.IsFinish(project) ? "Done" : " ") @(project.Deleted==true? "deleted" : " ") ">
                    <a href="@Url.Action("Details", "Project", new {id = project.Id })" class="project-title">
                        <h3>@project.Name </h3>
                    </a>
                    <div class="dropdown pull-right">
                        <button class="btn btn-default dropdown-toggle" type="button" id="dd-ctrl-projects" data-toggle="dropdown" aria-haspopup="true" aria-expanded="true">
                            <i class="fa fa-cog"></i>
                        </button>
                        <ul class="dropdown-menu" aria-labelledby="dd-ctrl-projects">
                            <li>
                                @Html.ActionLink("Matrix",                                     // linkText
                                                "Matrix",                                    // actionName
                                               "Project",                                  // controllerName
                                                        new
                                                        {                                           // routeValues
                                                            id = project.Id
                                                        },
                                                       new                                        // htmlAttributes
                                                       {
                                                           @class = "btn"
                                                       }
                                                   )
                            </li>
                            <li>
                                @Html.ActionLink(
                                                        "Details",                                     // linkText
                                                        "Details",                                    // actionName
                                                        "Project",                                  // controllerName
                                                        new
                                                        {                                           // routeValues
                                                            id = project.Id
                                                        },
                                                       new                                        // htmlAttributes
                                                       {
                                                           @class = "btn"
                                                       }
                                                   )
                            </li>
                            <li>
                                @Html.ActionLink(
                                                        "Edit",                                     // linkText
                                                        "Edit",                                    // actionName
                                                        "Project",                                  // controllerName
                                                        new
                                                        {                                           // routeValues
                                                            id = project.Id
                                                        },
                                                       new                                        // htmlAttributes
                                                       {
                                                           @class = "btn"
                                                       }
                                                   )
                            </li>
                            <li>
                                @Html.ActionLink(
                                                    "Delete",                                     // linkText
                                                    "Remove",                                    // actionName
                                                    "Project",                                  // controllerName
                                                    new
                                                    {                                           // routeValues
                                                        id = project.Id
                                                    },
                                                   new                                        // htmlAttributes
                                                   {
                                                       @class = "btn btn-danger confirm"
                                                   }
                                                 )
                            </li>
                        </ul>
                    </div>

                    <div class="card-block">
                        <p class="card-text">
                            From: <b>@project.StartAt.ToString("d/MMM yyyy")</b>
                            To  : <b>@project.EndAt.ToString("d/MMM yyyy")</b>
                            <br/>
                            Progress:
                            @if (project.Tasks.Count() > 0)
                            {
                            <span>@((project.Tasks.Where(t => t.Done == true).Count() / (float)project.Tasks.Count() * 100))%</span>
                            }
                            else
                            {
                            <b>0 %</b>
                            }
                            <br />
                            @if ((project.EndAt - DateTime.Now).TotalDays < 0)
                            {
                                <span class="done-label"> Done </span>
                            }

                            else
                            {
                                <span class="days-left"> @((int)(project.EndAt - DateTime.Now).TotalDays) days left</span>
                            }
                        </p>
                        <!-- <p>
                            <span style="color:#3288E6;">Objective</span>: @( new string(project.Objective.Take(20).ToArray()) )...
                        </p>
                        <p>
                            <span style="color:#3288E6;">Benifite</span> :  @( new string(project.Benifite.Take(20).ToArray()) )...
                        </p>
                        -->
                        <div class="card-control">
                            <a href="@Url.Action("Index", "Task", new { id = project.Id } )">
                                <i class="fa fa-arrow-circle-right"></i> Tasks (@project.Tasks.Count())
                            </a>
                            <a href="@Url.Action("Add", "Task", new { id = project.Id } )">
                                <i class="fa fa-plus-circle"></i> Add task
                            </a>
                            <a href="@Url.Action("Index", "Issue", new { id = project.Id } )">
                                <i class="fa fa-exclamation-circle"></i> Issues  (@project.Issues.Count)
                            </a>
                            <a href="@Url.Action("Add", "Task", new { id = project.Id } )">
                                <i class="fa fa-user-plus"></i> People (@Model.GetContributorsTo(project).Count)
                            </a>
                        </div>
                    </div>
                </div>
            }
            <div class="col-md-5">
                <a href="~/Project/Add" title="Add project" class="btn btn-new-project">
                    <i class="fa fa-plus fa-2x"> </i> New Project

                </a>
            </div>
        </div>

        @if (Model.OtherProjects.Count >= 1)
        {
            <h6 class="projects-grand-title">
                <span class="other-projects-line-text">
                    <i class="fa fa-object-group"></i> Other projects 
                </span>
            </h6>
            <div class="row">
                @foreach (var otherProject in Model.OtherProjects)
                {
                    <div data-toggle="tooltip" data-placement="right" title="@(otherProject.Deleted == true ? "This project was deleted" : " " )"
                         class="col-md-5 col-lg-offset-1 card @(@Model.IsFinish(otherProject) ? "done" : " ") @(otherProject.Deleted==true? "deleted" : " ")">
                        <b class="card-header">@otherProject.Name</b>
                        <div class="card-block">
                            <p class="card-text">
                                From: <b>@otherProject.StartAt.ToString("d/MMM yyyy")</b>
                                To  : <b>@otherProject.EndAt.ToString("d/MMM yyyy")</b>
                                <br />
                                Progress:
                                @if (otherProject.Tasks.Count() > 0)
                                {
                                    <span>@((otherProject.Tasks.Where(t => t.Done == true).Count() / (float)otherProject.Tasks.Count() * 100))%</span>
                                }
                                else
                                {
                                    <b>0 %</b>
                                }
                                <br />
                            @if ((otherProject.EndAt - DateTime.Now).TotalDays < 0)
                            {
                                <span class="done-label"> Done </span>
                            }

                            else
                            {
                                <span class="days-left"> @((int)(otherProject.EndAt - DateTime.Now).TotalDays) days left</span>
                            }
                            </p>
                           <!-- <p>
                                <span style="color: #3288E6;">Objective</span>: @otherProject.Objective
                            </p>
                            <p>
                                <span style="color:#3288E6;">Benifite</span> :   @otherProject.Benifite
                            </p>
                            -->
                            <div class="card-control">
                                @if (!Model.ImContributingTo(otherProject))
                                {
                                    <a href="@Url.Action("Index", "Task", new { id = otherProject.Id } )">
                                        <i class="fa fa-arrow-circle-right"></i> Contribute
                                    </a>
                                }
                                else
                                {
                                    <a href="@Url.Action("Index", "Task", new { id = otherProject.Id } )">
                                        <i class="fa fa-arrow-circle-right"></i> Tasks (@otherProject.Tasks.Count())
                                    </a>
                                }
                                <a href="@Url.Action("Add", "Task", new { id = otherProject.Id } )">
                                    <i class="fa fa-plus-circle"></i> Add task
                                </a>

                                <a href="@Url.Action("Index", "Issue", new { id = otherProject.Id } )">
                                    <i class="fa fa-exclamation-circle"></i> Issues  (@otherProject.Issues.Count)
                                </a>

                                <a href="@Url.Action("Add", "Task", new { id = otherProject.Id } )">
                                    <i class="fa fa-user-plus"></i> People (@Model.GetContributorsTo(otherProject).Count)
                                </a>

                            </div>
                        </div>
                    </div>
                }

            </div>
        }<!--END IF otherproject count >=1 -->


    </div>
</div>
<script src="~/Scripts/src/app/Home/App.js"></script>
